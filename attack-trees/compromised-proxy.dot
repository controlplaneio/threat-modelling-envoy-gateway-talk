digraph {
	// Base Styling
	rankdir="TB";
	splines=true;
	overlap=false;
	nodesep="0.2";
	ranksep="0.4";
    bgcolor="transparent";
	// label="Some Title";
	labelloc="t";
	fontname="Montserrat";
	node [ fontname="Montserrat" margin=0.28 shape="plaintext" style="filled, rounded" ];
	edge [ fontname="Montserrat" color="#2B303A" ];

	// List of Nodes

	// base nodes
	// reality [ label="Reality" fillcolor="#2B303A" fontcolor="#ffffff" ]
	// attack_win [ label="Access video\nrecordings in\nS3 bucket\n(attackers win)" fillcolor="#DB2955" fontcolor="#ffffff" ]

	// green nodes == OR nodes
	node [ color="#D6E9D5" ]
	malicious_image [ label="Maliciously crafted \nimage" ]
	compromised_proxy [ label="Compromised Envoy \nProxy" ]
	
	

	// blue nodes == AND nodes
	node [ color="#84BCE6" ]
	rce [ label="RCE within \nproxy" ]
	shell_in_container [ label="Gain shell in \nrunning proxy container" ]


	// white nodes == single nodes
	node [ color="#DDDDDD" ]
	supply_chain [ label="Supply chain \nattack" ]
	malicious_gw_class [ label="GatewayClass references \nmalicious image" ]
	vulnerable_image [ label="Vulnerable Envoy \nProxy image" ]
	network_access [ label="Attacker with \nnetwork access" ]
	pivot [ label="Pivot from \ncompromised workload" ]
	weak_k8s_security [ label="Weak K8s \nsecurity" ]
	k8s_api_network_access [ label="Attacker has K8s \nAPI network access" ]
	proxy_has_shell [ label="Proxy container \nhas shell" ]
	exec [ label="Exec call to \ncontainer" ]
	

	

	// List of Edges

	compromised_proxy -> malicious_image
	malicious_image -> supply_chain
	malicious_image -> malicious_gw_class
	compromised_proxy -> rce
	rce -> vulnerable_image
	rce -> network_access
	compromised_proxy -> pivot
	pivot -> weak_k8s_security
	compromised_proxy -> shell_in_container
	shell_in_container -> k8s_api_network_access
	shell_in_container -> proxy_has_shell
	shell_in_container -> exec


	// Subgraphs / Clusters

	// these clusters enforce the correct hierarchies
  
	subgraph same_level_a {
		rank=same;
		malicious_image
		rce
		pivot
		shell_in_container
	}

	subgraph same_level_b {
		rank=same;
		k8s_api_network_access
		proxy_has_shell
		exec
	}
}